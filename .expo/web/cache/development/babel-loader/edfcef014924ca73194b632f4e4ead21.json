{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"F:\\\\my\\\\ITI\\\\Frontend_Cross platform Mobile Dev\\\\ReactNative\\\\Session3\\\\app2\\\\App.js\";\n\nimport React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigatorContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { FontAwesome } from '@expo/vector-icons';\nimport Constants from 'expo-constants';\nvar x = Platform.select({\n  ios: 'ios',\n  android: 'android',\n  web: 'web'\n});\nconsole.log(x);\n\nvar Home = function Home() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'pink'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 18\n    }\n  }, \"home\");\n};\n\nvar Details = function Details() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'pink'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, \"details\");\n};\n\nvar Profile = function Profile() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'lightblue'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, \"profile\");\n};\n\nvar Settings = function Settings() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'gold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 22\n    }\n  }, \"settings\");\n};\n\nvar HomeStack = function HomeStack() {\n  return React.createElement(StackNavigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, React.createElement(StackScreen, {\n    name: \"home\",\n    component: Home,\n    options: {\n      headerStyle: {\n        backgroundColor: 'green'\n      },\n      headerTitle: 'home page',\n      headerLift: function headerLift() {\n        return React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 27\n          }\n        }, \"back\");\n      },\n      headerRight: function headerRight() {\n        return React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 28\n          }\n        }, \"next\");\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), React.createElement(StackScreen, {\n    name: \"prodDetails\",\n    component: Details,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar _createBottomTabNavig = createBottomTabNavigator(),\n    TabNavigator = _createBottomTabNavig.Navigator,\n    TabScreen = _createBottomTabNavig.Screen;\n\nvar _createStackNavigator = createStackNavigator(),\n    StackNavigator = _createStackNavigator.Navigator,\n    StackScreen = _createStackNavigator.Screen;\n\nexport default function App() {\n  var _this2 = this;\n\n  return React.createElement(NavigatorContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(TabNavigator, {\n    initialRouteName: \"home\",\n    tabBarOptions: {\n      activeTintColor: 'pink',\n      inactiveTintColor: 'red',\n      tabStyle: {\n        backgroundColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(TabScreen, {\n    name: \"homeStack\",\n    component: HomeStack,\n    options: {\n      title: 'hamada',\n      labelStyle: {\n        color: 'red'\n      },\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color;\n        return React.createElement(FontAwesome, {\n          name: \"home\",\n          size: 30,\n          color: color,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), React.createElement(TabScreen, {\n    name: \"profile\",\n    component: Profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), React.createElement(TabScreen, {\n    name: \"settings\",\n    component: Settings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 100\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["F:/my/ITI/Frontend_Cross platform Mobile Dev/ReactNative/Session3/app2/App.js"],"names":["React","NavigatorContainer","createBottomTabNavigator","createStackNavigator","FontAwesome","Constants","x","Platform","select","ios","android","web","console","log","Home","flex","backgroundColor","Details","Profile","Settings","HomeStack","headerStyle","headerTitle","headerLift","headerRight","TabNavigator","Navigator","TabScreen","Screen","StackNavigator","StackScreen","App","activeTintColor","inactiveTintColor","tabStyle","title","labelStyle","color","tabBarIcon","styles","StyleSheet","create","container","alignItems","justifyContent","marginTop","modalView","margin","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","button","buttonOpen","buttonClose","textStyle","fontWeight","textAlign","modalText","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, Platform, Pressable, SectionList, StyleSheet, Text, View } from 'react-native';\nimport {NavigatorContainer} from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { FontAwesome } from '@expo/vector-icons';\nimport Constants from 'expo-constants';\n\nconst x = Platform.select({\n  ios:'ios',\n  android:'android',\n  web:'web',\n})\nconsole.log(x)\nconst Home = ()=><View style={{flex:1, backgroundColor:'pink'}}>home</View>\nconst Details = ()=><View style={{flex:1, backgroundColor:'pink'}}>details</View>\nconst Profile = ()=><View style={{flex:1, backgroundColor:'lightblue'}}>profile</View>\nconst Settings = ()=><View style={{flex:1, backgroundColor:'gold'}}>settings</View>\n\nconst HomeStack = () =>(\n  <StackNavigator>\n      <StackScreen \n        name=\"home\"\n        component={Home} \n        options={{\n          // header:()=><Text>hue</Text>,\n          headerStyle:{backgroundColor:'green'},\n          headerTitle:'home page',\n          headerLift: ()=><Text>back</Text>,\n          headerRight: ()=><Text>next</Text>\n          }}/>\n      <StackScreen name=\"prodDetails\" component={Details}/>\n  </StackNavigator>\n)\nconst {Navigator: TabNavigator, Screen: TabScreen} = createBottomTabNavigator();\nconst {Navigator: StackNavigator, Screen: StackScreen} = createStackNavigator();\n\nexport default function App() {\n  //const [modalVisible, setModalVisible] = React.useState(false);\n  \n  return (\n      <NavigatorContainer>\n        <TabNavigator\n          initialRouteName=\"home\"\n          tabBarOptions={{\n            activeTintColor:'pink',\n            inactiveTintColor:'red',\n            tabStyle:{backgroundColor: 'green'}\n          }}\n          >\n            \n          <TabScreen \n            name=\"homeStack\" \n            component={HomeStack}\n            options={{\n              title:'hamada',\n              labelStyle:{color:'red'},\n              tabBarIcon:({color})=><FontAwesome name=\"home\" size={30} color={color}/>\n            }}\n            />\n          <TabScreen name=\"profile\" component={Profile}/>\n          <TabScreen name=\"settings\" component={Settings}/>\n        </TabNavigator>\n      </NavigatorContainer>\n    \n    // <View style={styles.container}>\n      \n    //   <Modal\n    //     animationType=\"slide\"\n    //     transparent={true}\n    //     visible={modalVisible}\n    //     onRequestClose={() => {\n    //       Alert.alert(\"Modal has been closed.\");\n    //       setModalVisible(!modalVisible);\n    //     }}\n    //   >\n    //   <View style={styles.centeredView}>\n    //       <View style={styles.modalView}>\n    //         <Text style={styles.modalText}>Hello World!</Text>\n    //         <Pressable\n    //           style={[styles.button, styles.buttonClose]}\n    //           onPress={() => setModalVisible(!modalVisible)}\n    //         >\n    //           <Text style={styles.textStyle}>Hide Modal</Text>\n    //         </Pressable>\n    //       </View>\n    //     </View>\n    //   </Modal>\n    //   <Pressable\n    //     style={[styles.button, styles.buttonOpen]}\n    //     onPress={() => setModalVisible(true)}\n    //   >\n    //     <Text style={styles.textStyle}>Show Modal</Text>\n    //   </Pressable>\n    //   <SectionList\n    //     sections= {[\n    //       {title:'Mobile', data:['iPhone x','iPhone 12']},\n    //       {title:'Laptops', data:['hp','mac']},\n    //     ]}\n    //     ListHeaderComponent={<View><Text>big header</Text></View>}\n    //     renderItem={({item})=><View><Text>{item}</Text></View>}\n    //     renderSectionHeader={({section:{title}})=><View><Text style={{color:'red'}}>{title}</Text></View>}\n    //     />\n    // </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 100\n  },\n  // modal:{\n  //   flex:1,\n  //   justifyContent:'center',\n  //   alignContent:'center',\n  //   alignItems:'center',\n  // },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\",\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}