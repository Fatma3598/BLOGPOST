{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\my\\\\ITI\\\\Frontend_Cross platform Mobile Dev\\\\ReactNative\\\\Session3\\\\app2\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nvar x = Platform.select({\n  ios: 'ios',\n  android: 'android',\n  web: 'web'\n});\nconsole.log(x);\nexport default function App() {\n  var _this = this;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalVisible = _React$useState2[0],\n      setModalVisible = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    visible: modalVisible,\n    transparent: true,\n    onRequestClose: function onRequestClose() {\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 200,\n      height: 100,\n      backgroundColor: 'lightblue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"modal\"), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, \"Hide Modal\"))))), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonOpen],\n    onPress: function onPress() {\n      return setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Show Modal\")), React.createElement(SectionList, {\n    sections: [{\n      title: 'Mobile',\n      data: ['iPhone x', 'iPhone 12']\n    }, {\n      title: 'Laptops',\n      data: ['hp', 'mac']\n    }],\n    ListHeaderComponent: React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 30\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 36\n      }\n    }, \"big header\")),\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 31\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 37\n        }\n      }, item));\n    },\n    renderSectionHeader: function renderSectionHeader(_ref2) {\n      var title = _ref2.section.title;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 51\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'red'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 57\n        }\n      }, title));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modal: {\n    flex: 1,\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center'\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["F:/my/ITI/Frontend_Cross platform Mobile Dev/ReactNative/Session3/app2/App.js"],"names":["StatusBar","React","x","Platform","select","ios","android","web","console","log","App","useState","modalVisible","setModalVisible","styles","container","modal","width","height","backgroundColor","button","buttonClose","textStyle","buttonOpen","title","data","item","section","color","StyleSheet","create","flex","alignItems","justifyContent","alignContent","modalView","margin","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","fontWeight","textAlign","modalText","marginBottom"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Modal, Platform, Pressable, SectionList, StyleSheet, Text, View } from 'react-native';\n\nconst x = Platform.select({\n  ios:'ios',\n  android:'android',\n  web:'web',\n})\nconsole.log(x)\nexport default function App() {\n  const [modalVisible, setModalVisible] = React.useState(false);\n  return (\n    <View style={styles.container}>\n      <Modal visible={modalVisible} transparent onRequestClose={()=>{setModalVisible(!modalVisible);}}>\n        <View style={styles.modal}>\n          <View style={{width:200, height:100,backgroundColor:'lightblue'}}>\n            <Text>modal</Text>\n            <Pressable\n              style={[styles.button, styles.buttonClose]}\n              onPress={() => setModalVisible(!modalVisible)}\n            >\n              <Text style={styles.textStyle}>Hide Modal</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n      <Pressable\n        style={[styles.button, styles.buttonOpen]}\n        onPress={() => setModalVisible(true)}\n      >\n        <Text style={styles.textStyle}>Show Modal</Text>\n      </Pressable>\n      <SectionList\n        sections= {[\n          {title:'Mobile', data:['iPhone x','iPhone 12']},\n          {title:'Laptops', data:['hp','mac']},\n        ]}\n        ListHeaderComponent={<View><Text>big header</Text></View>}\n        renderItem={({item})=><View><Text>{item}</Text></View>}\n        renderSectionHeader={({section:{title}})=><View><Text style={{color:'red'}}>{title}</Text></View>}\n        />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  modal:{\n    flex:1,\n    justifyContent:'center',\n    alignContent:'center',\n    alignItems:'center',\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\",\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}