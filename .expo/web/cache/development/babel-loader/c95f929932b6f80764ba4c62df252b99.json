{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\my\\\\ITI\\\\Frontend_Cross platform Mobile Dev\\\\ReactNative\\\\Session3\\\\app2\\\\App.js\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigatorContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/Stack\";\nvar x = Platform.select({\n  ios: 'ios',\n  android: 'android',\n  web: 'web'\n});\nconsole.log(x);\n\nvar Home = function Home() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'pink'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 18\n    }\n  }, \"home\");\n};\n\nvar Profile = function Profile() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'lightblue'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, \"profile\");\n};\n\nvar Settings = function Settings() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'gold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 22\n    }\n  }, \"settings\");\n};\n\nvar _createBottomTabNavig = createBottomTabNavigator(),\n    TabNavigator = _createBottomTabNavig.Navigator,\n    TabScreen = _createBottomTabNavig.Screen;\n\nexport default function App() {\n  var _this2 = this;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalVisible = _React$useState2[0],\n      setModalVisible = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Hello World!\"), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"Hide Modal\"))))), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonOpen],\n    onPress: function onPress() {\n      return setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Show Modal\")), React.createElement(SectionList, {\n    sections: [{\n      title: 'Mobile',\n      data: ['iPhone x', 'iPhone 12']\n    }, {\n      title: 'Laptops',\n      data: ['hp', 'mac']\n    }],\n    ListHeaderComponent: React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 30\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 36\n      }\n    }, \"big header\")),\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 31\n        }\n      }, React.createElement(Text, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }\n      }, item));\n    },\n    renderSectionHeader: function renderSectionHeader(_ref2) {\n      var title = _ref2.section.title;\n      return React.createElement(View, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 51\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'red'\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 57\n        }\n      }, title));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 100\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["F:/my/ITI/Frontend_Cross platform Mobile Dev/ReactNative/Session3/app2/App.js"],"names":["StatusBar","React","NavigatorContainer","createBottomTabNavigator","createStackNavigator","x","Platform","select","ios","android","web","console","log","Home","flex","backgroundColor","Profile","Settings","TabNavigator","Navigator","TabScreen","Screen","App","useState","modalVisible","setModalVisible","styles","container","Alert","alert","centeredView","modalView","modalText","button","buttonClose","textStyle","buttonOpen","title","data","item","section","color","StyleSheet","create","alignItems","justifyContent","marginTop","margin","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontWeight","textAlign","marginBottom"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;AAEA,SAAQC,kBAAR,QAAiC,0BAAjC;AACA,SAAQC,wBAAR,QAAuC,+BAAvC;AACA,SAAQC,oBAAR,QAAmC,yBAAnC;AACA,IAAMC,CAAC,GAAGC,QAAQ,CAACC,MAAT,CAAgB;AACxBC,EAAAA,GAAG,EAAC,KADoB;AAExBC,EAAAA,OAAO,EAAC,SAFgB;AAGxBC,EAAAA,GAAG,EAAC;AAHoB,CAAhB,CAAV;AAKAC,OAAO,CAACC,GAAR,CAAYP,CAAZ;;AACA,IAAMQ,IAAI,GAAG,SAAPA,IAAO;AAAA,SAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAC,CAAN;AAASC,MAAAA,eAAe,EAAC;AAAzB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ;AAAA,CAAb;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACF,MAAAA,IAAI,EAAC,CAAN;AAASC,MAAAA,eAAe,EAAC;AAAzB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAJ;AAAA,CAAhB;;AACA,IAAME,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACH,MAAAA,IAAI,EAAC,CAAN;AAASC,MAAAA,eAAe,EAAC;AAAzB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ;AAAA,CAAjB;;4BAEqDZ,wBAAwB,E;IAA3De,Y,yBAAXC,S;IAAiCC,S,yBAARC,M;;AAChC,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA,wBACYrB,KAAK,CAACsB,QAAN,CAAe,KAAf,CADZ;AAAA;AAAA,MACrBC,YADqB;AAAA,MACPC,eADO;;AAG5B,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AACE,IAAA,aAAa,EAAC,OADhB;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,OAAO,EAAEH,YAHX;AAIE,IAAA,cAAc,EAAE,0BAAM;AACpBI,MAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AACAJ,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACI,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE,CAACN,MAAM,CAACO,MAAR,EAAgBP,MAAM,CAACQ,WAAvB,CADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMT,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACS,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAFF,CADJ,CATA,CAFF,EAuBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE,CAACT,MAAM,CAACO,MAAR,EAAgBP,MAAM,CAACU,UAAvB,CADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMX,eAAe,CAAC,IAAD,CAArB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACS,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAvBF,EA6BE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAG,CACT;AAACE,MAAAA,KAAK,EAAC,QAAP;AAAiBC,MAAAA,IAAI,EAAC,CAAC,UAAD,EAAY,WAAZ;AAAtB,KADS,EAET;AAACD,MAAAA,KAAK,EAAC,SAAP;AAAkBC,MAAAA,IAAI,EAAC,CAAC,IAAD,EAAM,KAAN;AAAvB,KAFS,CADb;AAKE,IAAA,mBAAmB,EAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAN,CALvB;AAME,IAAA,UAAU,EAAE;AAAA,UAAEC,IAAF,QAAEA,IAAF;AAAA,aAAU,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAP,CAAN,CAAV;AAAA,KANd;AAOE,IAAA,mBAAmB,EAAE;AAAA,UAAWF,KAAX,SAAEG,OAAF,CAAWH,KAAX;AAAA,aAAqB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACI,UAAAA,KAAK,EAAC;AAAP,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BJ,KAA7B,CAAN,CAArB;AAAA,KAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,CADF;AAyCD;AAED,IAAMX,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC/BhB,EAAAA,SAAS,EAAE;AACTb,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGT6B,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,SAAS,EAAE;AALF,GADoB;AAc/Bf,EAAAA,SAAS,EAAE;AACTgB,IAAAA,MAAM,EAAE,EADC;AAEThC,IAAAA,eAAe,EAAE,OAFR;AAGTiC,IAAAA,YAAY,EAAE,EAHL;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTL,IAAAA,UAAU,EAAE,QALH;AAMTM,IAAAA,WAAW,EAAE,MANJ;AAOTC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAPL;AAWTC,IAAAA,aAAa,EAAE,IAXN;AAYTC,IAAAA,YAAY,EAAE,CAZL;AAaTC,IAAAA,SAAS,EAAE;AAbF,GAdoB;AA6B/BvB,EAAAA,MAAM,EAAE;AACNe,IAAAA,YAAY,EAAE,EADR;AAENC,IAAAA,OAAO,EAAE,EAFH;AAGNO,IAAAA,SAAS,EAAE;AAHL,GA7BuB;AAkC/BpB,EAAAA,UAAU,EAAE;AACVrB,IAAAA,eAAe,EAAE;AADP,GAlCmB;AAqC/BmB,EAAAA,WAAW,EAAE;AACXnB,IAAAA,eAAe,EAAE;AADN,GArCkB;AAwC/BoB,EAAAA,SAAS,EAAE;AACTM,IAAAA,KAAK,EAAE,OADE;AAETgB,IAAAA,UAAU,EAAE,MAFH;AAGTC,IAAAA,SAAS,EAAE;AAHF,GAxCoB;AA6C/B1B,EAAAA,SAAS,EAAE;AACT2B,IAAAA,YAAY,EAAE,EADL;AAETD,IAAAA,SAAS,EAAE;AAFF;AA7CoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Modal, Platform, Pressable, SectionList, StyleSheet, Text, View } from 'react-native';\nimport {NavigatorContainer} from \"@react-navigation/native\";\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\";\nimport {createStackNavigator} from \"@react-navigation/Stack\";\nconst x = Platform.select({\n  ios:'ios',\n  android:'android',\n  web:'web',\n})\nconsole.log(x)\nconst Home = ()=><View style={{flex:1, backgroundColor:'pink'}}>home</View>\nconst Profile = ()=><View style={{flex:1, backgroundColor:'lightblue'}}>profile</View>\nconst Settings = ()=><View style={{flex:1, backgroundColor:'gold'}}>settings</View>\n\nconst {Navigator: TabNavigator, Screen: TabScreen} = createBottomTabNavigator();\nexport default function App() {\n  const [modalVisible, setModalVisible] = React.useState(false);\n  \n  return (\n    <View style={styles.container}>\n      \n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          Alert.alert(\"Modal has been closed.\");\n          setModalVisible(!modalVisible);\n        }}\n      >\n      <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <Text style={styles.modalText}>Hello World!</Text>\n            <Pressable\n              style={[styles.button, styles.buttonClose]}\n              onPress={() => setModalVisible(!modalVisible)}\n            >\n              <Text style={styles.textStyle}>Hide Modal</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n      <Pressable\n        style={[styles.button, styles.buttonOpen]}\n        onPress={() => setModalVisible(true)}\n      >\n        <Text style={styles.textStyle}>Show Modal</Text>\n      </Pressable>\n      <SectionList\n        sections= {[\n          {title:'Mobile', data:['iPhone x','iPhone 12']},\n          {title:'Laptops', data:['hp','mac']},\n        ]}\n        ListHeaderComponent={<View><Text>big header</Text></View>}\n        renderItem={({item})=><View><Text>{item}</Text></View>}\n        renderSectionHeader={({section:{title}})=><View><Text style={{color:'red'}}>{title}</Text></View>}\n        />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 100\n  },\n  // modal:{\n  //   flex:1,\n  //   justifyContent:'center',\n  //   alignContent:'center',\n  //   alignItems:'center',\n  // },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\",\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}